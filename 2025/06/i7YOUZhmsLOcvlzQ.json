{
  "active": false,
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Get Topic",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Topic": {
      "main": [
        [
          {
            "node": "Newsletter Expert",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Newsletter Expert": {
      "main": [
        [
          {
            "node": "Project Planner",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Research Team",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Research Team": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Editor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Editor": {
      "main": [
        [
          {
            "node": "Create TItle",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Project Planner": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create TItle": {
      "main": [
        [
          {
            "node": "Google Sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download file": {
      "main": [
        [
          {
            "node": "Pinecone Vector Store",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare chunks": {
      "main": [
        [
          {
            "node": "Answer the query based on chunks",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Compose citations": {
      "main": [
        [
          {
            "node": "Generate response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Pinecone Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI2": {
      "ai_embedding": [
        [
          {
            "node": "Get top chunks matching query",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Pinecone Vector Store",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "When chat message received": {
      "main": [
        [
          {
            "node": "Set max chunks to send to model",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set file URL in Google Drive": {
      "main": [
        [
          {
            "node": "Download file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get top chunks matching query": {
      "main": [
        [
          {
            "node": "Prepare chunks",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set max chunks to send to model": {
      "main": [
        [
          {
            "node": "Get top chunks matching query",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Answer the query based on chunks": {
      "main": [
        [
          {
            "node": "Compose citations",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking \"Execute Workflow\"": {
      "main": [
        [
          {
            "node": "Set file URL in Google Drive",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Recursive Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model4": {
      "ai_languageModel": [
        [
          {
            "node": "Answer the query based on chunks",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "gpt-4.1": {
      "ai_languageModel": [
        [
          {
            "node": "Research Team",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Editor",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Newsletter Expert",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger1": {
      "main": [
        [
          {
            "node": "Get Topic1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Topic1": {
      "main": [
        [
          {
            "node": "Copy Writer Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Copy Writer Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Copy Writer Agent": {
      "main": [
        [
          {
            "node": "Google Sheets1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Copy Writer Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Daily Schedule": {
      "main": [
        [
          {
            "node": "Get Tips/Quiz",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Daily Schedule1": {
      "main": [
        [
          {
            "node": "Get Notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "On form submission1": {
      "main": [
        [
          {
            "node": "Add Subscriber",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Daily Schedule2": {
      "main": [
        [
          {
            "node": "Get Subscriber",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get Offer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set to BCC": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Offer": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Send Bulk Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Bulk Email": {
      "main": [
        [
          {
            "node": "Update Status2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Subscriber": {
      "main": [
        [
          {
            "node": "Set to BCC",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Workflow Input Trigger": {
      "main": [
        [
          {
            "node": "Tavily",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Tavily": {
      "main": [
        [
          {
            "node": "response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "On form submission": {
      "main": [
        [
          {
            "node": "Discord Interaction",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Tips/Quiz": {
      "main": [
        [
          {
            "node": "Discord Interaction2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Discord Interaction2": {
      "main": [
        [
          {
            "node": "Update Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Notification": {
      "main": [
        [
          {
            "node": "Discord Interaction3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Discord Interaction3": {
      "main": [
        [
          {
            "node": "Update Status1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Discord Trigger1": {
      "main": [
        [
          {
            "node": "AI Agent2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "gpt-4o-mini": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent2",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "FAQ Database": {
      "ai_tool": [
        [
          {
            "node": "AI Agent2",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent2": {
      "main": [
        [
          {
            "node": "Discord Interaction1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-06-03T15:51:01.996Z",
  "id": "i7YOUZhmsLOcvlzQ",
  "meta": null,
  "name": "My workflow",
  "nodes": [
    {
      "parameters": {
        "content": "## #1 - Simple - Send Message to Discord",
        "height": 340,
        "width": 760,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        0,
        0
      ],
      "id": "c6e5bb16-c352-40b3-b7c3-b62c65ead624",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## #5 - Content Generator",
        "height": 520,
        "width": 3540,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -40,
        5180
      ],
      "id": "9c7bad22-2518-48e9-9cb7-7aa96e3ce7e4",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {}
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        40,
        5300
      ],
      "id": "0ec44d2f-aa94-4116-8b23-5a6983d51413",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-discord-trigger.discordInteraction",
      "typeVersion": 1,
      "position": [
        3180,
        5280
      ],
      "id": "d9a379ce-b71a-4c8b-be6c-68ab457bc4b5",
      "name": "Send to Channel"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1Wcrfa1kaVzBOGD72clUXYJkclc3GHVjai325n-FVJF4",
          "mode": "list",
          "cachedResultName": "Database for Discord Automations",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Wcrfa1kaVzBOGD72clUXYJkclc3GHVjai325n-FVJF4/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "#2",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Wcrfa1kaVzBOGD72clUXYJkclc3GHVjai325n-FVJF4/edit#gid=0"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "Status",
              "lookupValue": "To Do"
            }
          ]
        },
        "options": {
          "returnFirstMatch": true
        }
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        260,
        5300
      ],
      "id": "bfe08fb6-876a-4e93-aec3-cf1595ee3790",
      "name": "Get Topic"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1Wcrfa1kaVzBOGD72clUXYJkclc3GHVjai325n-FVJF4",
          "mode": "list",
          "cachedResultName": "Database for Discord Automations",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Wcrfa1kaVzBOGD72clUXYJkclc3GHVjai325n-FVJF4/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "#2",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Wcrfa1kaVzBOGD72clUXYJkclc3GHVjai325n-FVJF4/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Status": "Created",
            "Result": "={{ $json.message.content }}\n\n{{ $('Editor').item.json.output }}",
            "Research Articles": "={{ $('Project Planner').item.json.message.content.newsletterSections }}",
            "row_number": "={{ $('Get Topic').item.json.row_number }}"
          },
          "matchingColumns": [
            "row_number"
          ],
          "schema": [
            {
              "id": "Topic",
              "displayName": "Topic",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Audiens",
              "displayName": "Audiens",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Tone",
              "displayName": "Tone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Status",
              "displayName": "Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Research Articles",
              "displayName": "Research Articles",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Result",
              "displayName": "Result",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        2900,
        5280
      ],
      "id": "7a5615b6-df5e-405b-bbcb-41aa18933926",
      "name": "Google Sheets"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        900,
        5540
      ],
      "id": "81065013-a111-4b3a-9b08-a6b81ae9203a",
      "name": "Tavily Tool"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Newsletter Topic: {{ $json.Topic }}\nNewsletter Tone: {{ $json.Tone }}\nNewsletter Target Audience: {{ $json.Audiens }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=# Overview  \nYou are an AI agent responsible for planning the sections of a newsletter by creating an engaging table of contents tailored to the newsletter's topic, tone, and target audience.  \n\n## Context  \n- The newsletter will vary in topic, tone, and target audience depending on the request.  \n- Your role is to use the \"tavily\" tool to search for relevant topics and craft a high-level, engaging table of contents.  \n- The table of contents should resonate with the target audience and encourage them to read the full newsletter.  \n\n## Instructions  \n1. Analyze the incoming information, including the newsletter topic, tone, and target audience details.  \n2. Use the \"tavily\" tool to research relevant and trending subtopics related to the main newsletter topic.  \n3. Based on your findings, create a table of contents with high-level, engaging topics tailored to the target audience.  \n4. Ensure the topics align with the newsletter's tone and are structured to maintain the reader's interest.  \n5. Include brief descriptions for each section if requested.  \n\n## Tools  \n- tavily tool for internet research  \n- Predefined audience profiles (if provided)  \n\n## Examples  \n- **Input:**  \n  - Topic: \"Sustainable Living\"  \n  - Tone: Informative yet approachable  \n  - Target Audience: Young adults interested in eco-friendly lifestyles  \n\n- **Output:**  \n  Table of Contents:  \n  1. \"What is Sustainable Living? A Beginner’s Guide\"  \n  2. \"Top 10 Small Changes for a Big Impact\"  \n  3. \"The Science Behind Sustainability: Why It Matters\"  \n  4. \"Spotlight on Innovations: Green Tech of 2025\"  \n  5. \"Inspiration Corner: Stories of Everyday Eco-Warriors\"  \n\n- **Input:**  \n  - Topic: \"Remote Work Tips\"  \n  - Tone: Professional yet motivational  \n  - Target Audience: Corporate professionals transitioning to remote work  \n\n- **Output:**  \n  Table of Contents:  \n  1. \"Remote Work Revolution: Adapting to the New Norm\"  \n  2. \"Home Office Hacks for Maximum Productivity\"  \n  3. \"Balancing Act: Work-Life Harmony Tips\"  \n  4. \"Top Collaboration Tools Every Remote Team Needs\"  \n  5. \"Success Stories: How Remote Work Changed Lives\"  \n\n## SOP (Standard Operating Procedure)  \n1. Review the provided details about the newsletter's topic, tone, and target audience.  \n2. Use the \"tavily\" tool to search for trending, relevant, and engaging subtopics.  \n3. Brainstorm 4-6 high-level topics that fit within the theme of the newsletter and appeal to the target audience.  \n4. Verify that each section aligns with the tone and goals of the newsletter.  \n5. Finalize the table of contents and, if requested, provide brief descriptions for each section.  \n\n## Final Notes  \n- Keep the topics concise and engaging to maximize interest.  \n- Adapt your tone and choice of topics to suit the specific audience profile.  \n- Always aim for a balance of informative and engaging content to maintain readership.  \n---  \nHere is the current date {{ $now }}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        480,
        5300
      ],
      "id": "3c0deb4c-53b5-463f-a300-5a20f8db3988",
      "name": "Newsletter Expert"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=Your job is to split out the table of contents into an individual item for each section. Output each section separately in a field called \"newsletterSections\". When doing so, keep in mind that the newsletter target audience is {{ $('Get Topic').item.json.Audiens }} and the tone of the newsletter should be {{ $('Get Topic').item.json.Tone }}\n\nHere is the table of contents: {{ $json.output }}\n\n",
              "role": "system"
            }
          ]
        },
        "jsonOutput": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        860,
        5300
      ],
      "id": "d5c34662-2fb3-483a-afb3-d6f7ae2e9542",
      "name": "Project Planner"
    },
    {
      "parameters": {
        "fieldToSplitOut": " message.content.newsletterSections",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        1260,
        5300
      ],
      "id": "aba12392-be41-4bd1-aa63-8f9c07b556fa",
      "name": "Split Out"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Section Title: {{ $('Split Out').item.json.title }}\n\nSection Description: {{ $('Split Out').item.json.description }}\n\nNewsletter Target Audience: {{ $('Get Topic').item.json.Audiens }}\n\nNewsletter Tone: {{ $('Get Topic').item.json.Tone }}",
        "options": {
          "systemMessage": "=# Overview  \nYou are an AI agent responsible for delivering only the final content for a newsletter section. Your role is to produce concise, well-researched, and audience-tailored content based solely on the provided inputs, with no prefacing statements or explanations.  \n\n## Context  \n- All necessary details, including the section title, description, target audience, and tone, will be provided.  \n- The goal is to create engaging content that aligns with the audience's expectations and the newsletter's objectives.  \n- Content must be supported by research, with sources clearly cited using hyperlinks.  \n\n## Instructions  \n1. Write the final content without including any introductory or concluding remarks about the writing process.  \n2. Conduct research using the tavily tool to ensure credibility and relevance.  \n3. Use the provided inputs to craft a focused section tailored to the target audience.  \n4. Include citations seamlessly within the content using hyperlinks to the original sources.  \n\n## Tools  \n- tavily (for research and citations). \n\n## Citation Guidelines\n- Use the tavily tool to gather information and cite sources\n- For each major claim or piece of information, include a hyperlinked inline citation\n- Format citations as HTML links with descriptive text:\n  <a href=\"[URL]\">[Source: Publication Name]</a>\n- When directly quoting from a source, use quotation marks and include the citation\n\n## Examples  \n- **Input**:  \n  - Section Title: \"The Psychology of Happy Patients\"  \n  - Description: Discuss strategies dental offices can use to improve patient experiences and satisfaction, such as personalized care and stress-reducing techniques.  \n  - Target Audience: Dentists and dental practice managers.  \n  - Tone: Informative yet approachable.  \n- **Output**:  \n  \"Creating a positive patient experience starts with understanding the key drivers of satisfaction in dental care. Personalized care, such as addressing individual patient concerns and tailoring treatments, can significantly boost trust and comfort [Source](https://example.com/personalized-care). Stress-reducing techniques, like offering noise-canceling headphones or aromatherapy in waiting rooms, have also been shown to alleviate anxiety and improve overall impressions of care [Source](https://example.com/stress-reduction). By focusing on these elements, dental practices can foster happier, more loyal patients.\"  \n\n## SOP (Standard Operating Procedure)  \n1. **Input Analysis**: Understand the section's title, description, target audience, and tone.  \n2. **Research**: Use the tavily tool to gather relevant, credible information.  \n3. **Content Writing**: Craft a section based on the provided inputs, ensuring it is directly usable in the newsletter.  \n4. **Cite Sources**: Integrate hyperlinks to all references within the content.  \n5. **Review and Deliver**: Proofread the content to ensure clarity, accuracy, and alignment with the target audience.  \n\n## Final Notes  \n- The output must start directly with the content, without introductory or transitional phrases.  \n- All sources must be clearly cited and integrated naturally into the text.  \n- Focus on delivering value and ensuring readability for the target audience.  \n---  \n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        1500,
        5200
      ],
      "id": "d9415fa2-8978-499f-bde6-9de2917e5633",
      "name": "Research Team"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        1860,
        5280
      ],
      "id": "edfd56c0-09dc-4034-be2a-6cdf439b9754",
      "name": "Merge"
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {
              "fieldToAggregate": "title"
            },
            {
              "fieldToAggregate": "output"
            }
          ]
        },
        "options": {
          "mergeLists": true
        }
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        2020,
        5280
      ],
      "id": "6dd49bff-8f31-43f8-b505-09d7586a265f",
      "name": "Aggregate"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=List of titles: {{ $json.title }}\nList of article content: {{ $json.output }}",
        "options": {
          "systemMessage": "=## Overview\nYou are an expert editor specializing in creating and refining content to output a high quality, formatted article. You are given a list of titles and outputs and you will use these to create a newsletter tailored towards the defined target audience. Create a section in the article for each title, with a hyperlinked source in each section based on the content.\n\n## Objective\n1. Create content for each title using the provided content\n2. Each section should contain inline citations *Don't leave any out*\n3. Improve the flow of the newsletter and format it for readability\n\n## Citation Management\n1. Preserve all inline citations\n2. Standardize citation format\n3. Ensure citations don't disrupt the flow of reading\n\n## Source Section\n1. Create ONE \"Sources\" section at the end of the newsletter\n2. Format each source entry consistently: \n   <li><a href=\"[URL]\">[Publication Name] - [Article Title]</a></li>\n3. Include complete URL for each source\n4. Organize all sources alphabetically\n5. Verify all links are functional\n\n## Output Format\nThe newsletter should be structured as HTML that will be sent through email:\n- Do not output a title or an introduction, the output should start with the first article heading\n- Main content with hyperlink citations in each section.\n- Headers for each section of the article\n- Sources section at the end with all links\n\n## Important ##\nOutput 1000 words maximum or else the automation breaks!\n\nToday's date is {{ $now }}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        2180,
        5280
      ],
      "id": "bf3eb7ba-42d2-4ba1-9941-bf267c16724a",
      "name": "Editor"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=Create a title for the incoming newsletter. The tone of the newsletter is {{ $('Get Topic').item.json.Tone }} and the target audience is {{ $('Get Topic').item.json.Audiens }}.\n\nHere is the newsletter:\n{{ $json.output }}\n\n# Output format\nOutput the title in plain text, no quotation marks, and capitalize the first letter of each word.\nExample: Is Artificial Intelligence A Friend Or Foe?",
              "role": "system"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        2520,
        5280
      ],
      "id": "ae4000c0-65b4-4571-8379-7c8c63e3c877",
      "name": "Create TItle"
    },
    {
      "parameters": {
        "additionalFields": {}
      },
      "type": "n8n-nodes-discord-trigger.discordTrigger",
      "typeVersion": 1,
      "position": [
        60,
        2640
      ],
      "id": "a7d9660c-34a8-4286-a75e-88b0f2b2923f",
      "name": "Discord Trigger1"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-discord-trigger.discordInteraction",
      "typeVersion": 1,
      "position": [
        660,
        2640
      ],
      "id": "7e4caaa6-e5b0-4722-ac67-6f0bb3f01d79",
      "name": "Discord Interaction1"
    },
    {
      "parameters": {
        "content": "## #4 - Simple - FAQ & Customer Support Bot",
        "height": 520,
        "width": 920
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -20,
        2520
      ],
      "id": "494cc779-d20a-4c7a-96e8-cf4abec8dd79",
      "name": "Sticky Note2"
    },
    {
      "parameters": {},
      "id": "141349c2-968d-4e83-a83b-176ed5ca1b1d",
      "name": "When clicking \"Execute Workflow\"",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        140,
        3280
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "mode": "insert",
        "pineconeIndex": {
          "__rl": true,
          "value": "pdf-index",
          "mode": "id"
        },
        "options": {}
      },
      "id": "c2002976-6b9c-473c-a3df-535ed779fca7",
      "name": "Pinecone Vector Store",
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "position": [
        880,
        3280
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "376cdc44-3963-4386-af79-888cf7f4a8b1",
      "name": "When chat message received",
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "position": [
        140,
        4000
      ],
      "webhookId": "cd2703a7-f912-46fe-8787-3fb83ea116ab",
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "dc7a70e3-9b04-404b-8892-ba0fcc4274c2",
              "name": "file_url",
              "type": "string",
              "value": " https://drive.google.com/file/d/11Koq9q53nkk0F5Y8eZgaWJUVR03I4-MM/view"
            }
          ]
        },
        "options": {}
      },
      "id": "1d2a7fae-d674-46c0-a04d-c9f01565f2af",
      "name": "Set file URL in Google Drive",
      "type": "n8n-nodes-base.set",
      "position": [
        360,
        3280
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "mode": "url",
          "value": "={{ $json.file_url }}"
        },
        "options": {}
      },
      "id": "799e5e81-e261-4c12-9128-27ab39c5372f",
      "name": "Download file",
      "type": "n8n-nodes-base.googleDrive",
      "position": [
        580,
        3280
      ],
      "typeVersion": 3
    },
    {
      "parameters": {
        "dataType": "binary",
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "file_url",
                "value": "={{ $('Set file URL in Google Drive').first().json.file_url }}"
              },
              {
                "name": "file_name",
                "value": "={{ $('Download file').first().binary.data.fileName }}"
              }
            ]
          }
        }
      },
      "id": "e22f7546-6abd-4d0f-89b6-004d21fb7283",
      "name": "Default Data Loader",
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "position": [
        1000,
        3480
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "9f0cb508-7107-4e20-80f7-2383871ab21d",
      "name": "Embeddings OpenAI2",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "position": [
        580,
        4220
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "75adb377-7d8b-4c82-bd6f-e102bd5e30c2",
      "name": "Embeddings OpenAI",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "position": [
        840,
        3480
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "chunkSize": 3000,
        "chunkOverlap": 200,
        "options": {}
      },
      "id": "13db2a7a-1990-4435-97ff-3839a9c805c0",
      "name": "Recursive Character Text Splitter",
      "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "position": [
        1060,
        3640
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "33f4addf-72f3-4618-a6ba-5b762257d723",
              "name": "chunks",
              "type": "number",
              "value": 4
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "b17b221e-53de-4870-8847-10689aba52c5",
      "name": "Set max chunks to send to model",
      "type": "n8n-nodes-base.set",
      "position": [
        380,
        4000
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "mode": "load",
        "pineconeIndex": {
          "__rl": true,
          "value": "pdf-index",
          "mode": "id"
        },
        "prompt": "={{ $json.chatInput }}",
        "topK": "={{ $json.chunks }}",
        "options": {}
      },
      "id": "04809343-3e30-48e2-a01f-340958737c20",
      "name": "Get top chunks matching query",
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "position": [
        580,
        4000
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "jsCode": "let out = \"\"\nfor (const i in $input.all()) {\n  let itemText = \"--- CHUNK \" + i + \" ---\\n\"\n  itemText += $input.all()[i].json.document.pageContent + \"\\n\"\n  itemText += \"\\n\"\n  out += itemText\n}\n\nreturn {\n  'context': out\n};"
      },
      "id": "763f129f-dca2-4bb4-b722-d3e59f5d6183",
      "name": "Prepare chunks",
      "type": "n8n-nodes-base.code",
      "position": [
        940,
        4000
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "text": "={{ $json.context }}\n\nQuestion: {{ $('When chat message received').first().json.chatInput }}\nHelpful Answer:",
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"required\": [\"answer\", \"citations\"],\n  \"properties\": {\n    \"answer\": {\n      \"type\": \"string\"\n    },\n    \"citations\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"number\"\n      }\n    }\n  }\n}",
        "options": {
          "systemPromptTemplate": "=You are a very enthusiastic chatbot who loves to help people! Your name is ArtSmart Course Bot and you are designed to respond based on your knowledges and with natural tone, very humble, generated in Markdown format and you must do not provide fake links or external links rather you provide feedback to contact cs@shotsmart.ai\n\nUse the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer. Important: In your response, also include the the indexes of the chunks you used to generate the answer."
        }
      },
      "id": "abec5b04-87df-46f3-92b3-632d0eb3337c",
      "name": "Answer the query based on chunks",
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "position": [
        1140,
        4000
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "ace6185e-8b3d-4f89-ae36-dfe0c391a0a9",
              "name": "citations",
              "type": "array",
              "value": "={{ $json.output.citations.map(i => '[' + $('Get top chunks matching query').all()[$json.output.citations].json.document.metadata.file_name + ', lines ' + $('Get top chunks matching query').all()[$json.output.citations].json.document.metadata['loc.lines.from'] + '-' + $('Get top chunks matching query').all()[$json.output.citations].json.document.metadata['loc.lines.to'] + ']') }}"
            }
          ]
        },
        "options": {}
      },
      "id": "7c5e38f4-cd79-44dc-ab47-baa689e3199c",
      "name": "Compose citations",
      "type": "n8n-nodes-base.set",
      "position": [
        1500,
        4000
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "11396286-0378-4c3a-86e1-c9ef51afbfc7",
              "name": "text",
              "type": "string",
              "value": "={{ $('Answer the query based on chunks').item.json.output.answer }} {{ $if(!$json.citations.isEmpty(), \"\\n\" + $json.citations.join(\"\"), '') }}"
            }
          ]
        },
        "options": {}
      },
      "id": "df733306-7b36-49d1-a123-d083ee7c3076",
      "name": "Generate response",
      "type": "n8n-nodes-base.set",
      "position": [
        1700,
        4000
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "content": "## #4 - FAQ & Customer Support Bot with Knowledge Base",
        "height": 728,
        "width": 1406
      },
      "id": "bb651fbf-0a93-42d5-bd4b-48c2ef323093",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -20,
        3100
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "",
        "height": 569,
        "width": 1994
      },
      "id": "d5bf92f8-8de9-48d0-96da-8a7d0045286f",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -20,
        3840
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "id": "702e08eb-d6bf-46d1-a883-b26d59324847",
      "name": "OpenAI Chat Model4",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        1140,
        4220
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1",
          "mode": "list",
          "cachedResultName": "gpt-4.1"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1820,
        5540
      ],
      "id": "0de44ad8-b717-414d-9312-7ea4fc05d9e3",
      "name": "gpt-4.1"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        200,
        2860
      ],
      "id": "64af8be1-16bd-4954-b3b7-869d1e3bc8ac",
      "name": "gpt-4o-mini"
    },
    {
      "parameters": {
        "formTitle": "Contact Us",
        "formFields": {
          "values": [
            {
              "fieldLabel": "Email",
              "requiredField": true
            },
            {
              "fieldLabel": "Message",
              "fieldType": "textarea",
              "requiredField": true
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.formTrigger",
      "typeVersion": 2.2,
      "position": [
        160,
        120
      ],
      "id": "8e0e7076-b66a-4173-8ffb-2b6267227213",
      "name": "On form submission",
      "webhookId": "63917f9b-4fe1-435a-ac09-370b76a84aa8"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        460,
        5540
      ],
      "id": "37337d91-6210-499e-8434-ea6a203b6eee",
      "name": "OpenAI Chat Model"
    },
    {
      "parameters": {
        "content": "## #5 - Simple - Content Generator",
        "height": 520,
        "width": 1400,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -40,
        4640
      ],
      "id": "7bb5a841-05bc-4b86-83d6-6ecff6bb1b45",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {}
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        40,
        4760
      ],
      "id": "a8b29534-0633-494d-89a6-f2d87458d9c9",
      "name": "Schedule Trigger1"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-discord-trigger.discordInteraction",
      "typeVersion": 1,
      "position": [
        1140,
        4760
      ],
      "id": "268a6a54-5fff-4c39-9523-a65b5567abf1",
      "name": "Send to Channel1"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1Wcrfa1kaVzBOGD72clUXYJkclc3GHVjai325n-FVJF4",
          "mode": "list",
          "cachedResultName": "Database for Discord Automations",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Wcrfa1kaVzBOGD72clUXYJkclc3GHVjai325n-FVJF4/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "#2",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Wcrfa1kaVzBOGD72clUXYJkclc3GHVjai325n-FVJF4/edit#gid=0"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "Status",
              "lookupValue": "To Do"
            }
          ]
        },
        "options": {
          "returnFirstMatch": true
        }
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        260,
        4760
      ],
      "id": "74acb12c-e0f0-46bd-a465-ceb856446bab",
      "name": "Get Topic1"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1Wcrfa1kaVzBOGD72clUXYJkclc3GHVjai325n-FVJF4",
          "mode": "list",
          "cachedResultName": "Database for Discord Automations",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Wcrfa1kaVzBOGD72clUXYJkclc3GHVjai325n-FVJF4/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "#2",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Wcrfa1kaVzBOGD72clUXYJkclc3GHVjai325n-FVJF4/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Status": "Created",
            "Result": "={{ $json.output.title }}\n\n{{ $json.output.content }}",
            "Research Articles": "={{ $json.output.research }}",
            "row_number": "={{ $('Get Topic1').item.json.row_number }}"
          },
          "matchingColumns": [
            "row_number"
          ],
          "schema": [
            {
              "id": "Topic",
              "displayName": "Topic",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Audiens",
              "displayName": "Audiens",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Tone",
              "displayName": "Tone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Status",
              "displayName": "Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Research Articles",
              "displayName": "Research Articles",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Result",
              "displayName": "Result",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        900,
        4760
      ],
      "id": "bb52ad03-6a3c-4f73-9bb4-7777e038afcf",
      "name": "Google Sheets1"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        640,
        5000
      ],
      "id": "4d32cf8a-6d0d-4e3c-937e-8f5f00b72433",
      "name": "Tavily Tool1"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-mini",
          "mode": "list",
          "cachedResultName": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        460,
        5000
      ],
      "id": "c11023d5-f56c-4236-8b81-fe7f07b833da",
      "name": "OpenAI Chat Model1"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Newsletter Topic: {{ $json.Topic }}\nNewsletter Tone: {{ $json.Tone }}\nNewsletter Target Audience: {{ $json.Audiens }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=Role: copywritr, 12+yrs exp. Style: Creatv.\n\nFrmt 1: Topic-Basd Linear Progrssn\nDesc: Orgnz course to mini-cours, each focus on AI topic, progrss fundmtl→practcl. Lrnrs build seq - each mini-crs covr relatd concepts, each tut breaks to steps. Clear path (AI intro→ML→Neural), each lessn builds prev knwldg. Linear approch for beginrs.\nMini-Crs Struct (ex:\"ML Basics\"):\nIntro: Topic ovrvw, goals, prereqs, terms (ML,model)\nTut1: Wat is ML? – Def+real case (recmndr)\nTut2: ML Types (Sup v Unsup) – W/analogy\nTut3: Key Algo – Basic+illustr\nTut4: Practice – Hands-on ML task\nTut5: Recap – Sum+next\n\nTut Struct (ex:\"Wat is ML?\"):\nTitle+Ovrvw: Brief intro+why\nBckgrnd: Context+terms w/analogy\nSteps:\n1: ML def+analogy (\"teach child\")\n2: Real case (Netflix,spam)\n3: ML flow (data→model→out)\nEnd: 2-3 wrap+next topic\n\nFormat: Same temp (intro→steps→sum)\n\n## Instructions  \n1. Analyze the incoming information, including the newsletter topic, tone, and target audience details.  \n2. Use the \"tavily\" tool to research relevant and trending subtopics related to the main newsletter topic.  \n3. Based on your findings, create a contents with high-level, engaging topics tailored to the target audience.  \n4. Ensure the topics align with the newsletter's tone and are structured to maintain the reader's interest.  \n5. Include brief descriptions for each section if requested.\n\n## Tools  \n- tavily tool for internet research  \n- Predefined audience profiles (if provided)  \n\nOutput:\n{\n \"title\": str,\n \"content\": 1000+ words,\n \"research\": result from tavily\n}\n\n## Final Notes  \n- Keep the topics concise and engaging to maximize interest.  \n- Adapt your tone and choice of topics to suit the specific audience profile.  \n- Always aim for a balance of informative and engaging content to maintain readership.  \n---  \nHere is the current date {{ $now }}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        520,
        4760
      ],
      "id": "cdd52cb4-c78f-49a9-a917-43c71d43752c",
      "name": "Copy Writer Agent"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n\t\"title\": \"str\",\n\t\"content\": \"str\",\n    \"research\": \"str\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        820,
        5000
      ],
      "id": "179958f2-8449-4961-8d17-34a558d65cc8",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "content": "## #2 - Send Daily Educational Tips / Quiz to discord",
        "height": 340,
        "width": 1080,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        0,
        560
      ],
      "id": "c9fcee3d-96ce-48ec-beef-f47bf7fcbb03",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {}
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        120,
        680
      ],
      "id": "d60f7e60-e12b-4576-a9ec-6ff0746fed36",
      "name": "Daily Schedule"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1Wcrfa1kaVzBOGD72clUXYJkclc3GHVjai325n-FVJF4",
          "mode": "list",
          "cachedResultName": "Database for Discord Automations",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Wcrfa1kaVzBOGD72clUXYJkclc3GHVjai325n-FVJF4/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1341187433,
          "mode": "list",
          "cachedResultName": "#1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Wcrfa1kaVzBOGD72clUXYJkclc3GHVjai325n-FVJF4/edit#gid=1341187433"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "Status",
              "lookupValue": "To Do"
            }
          ]
        },
        "options": {
          "returnFirstMatch": true
        }
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        340,
        680
      ],
      "id": "b555ec5f-f337-42ff-bd52-e6ebccb28bb8",
      "name": "Get Tips/Quiz"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1Wcrfa1kaVzBOGD72clUXYJkclc3GHVjai325n-FVJF4",
          "mode": "list",
          "cachedResultName": "Database for Discord Automations",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Wcrfa1kaVzBOGD72clUXYJkclc3GHVjai325n-FVJF4/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1341187433,
          "mode": "list",
          "cachedResultName": "#1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Wcrfa1kaVzBOGD72clUXYJkclc3GHVjai325n-FVJF4/edit#gid=1341187433"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Status": "Created",
            "row_number": "={{ $('Get Tips/Quiz').item.json.row_number }}"
          },
          "matchingColumns": [
            "row_number"
          ],
          "schema": [
            {
              "id": "Status",
              "displayName": "Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Title",
              "displayName": "Title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Article",
              "displayName": "Article",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        820,
        680
      ],
      "id": "4d75e3af-44a5-4485-8587-e03e35be87a9",
      "name": "Update Status"
    },
    {
      "parameters": {
        "content": "## #3.1 - Send Promotional & Launch Notification to Discord",
        "height": 340,
        "width": 1080,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        0,
        1120
      ],
      "id": "7611e612-23c8-4dd3-8a19-bf2b8358fca4",
      "name": "Sticky Note7"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {}
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        120,
        1240
      ],
      "id": "14603f4f-1af4-49d9-af02-c367db0c09f2",
      "name": "Daily Schedule1"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1Wcrfa1kaVzBOGD72clUXYJkclc3GHVjai325n-FVJF4",
          "mode": "list",
          "cachedResultName": "Database for Discord Automations",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Wcrfa1kaVzBOGD72clUXYJkclc3GHVjai325n-FVJF4/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1898924116,
          "mode": "list",
          "cachedResultName": "#3.1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Wcrfa1kaVzBOGD72clUXYJkclc3GHVjai325n-FVJF4/edit#gid=1898924116"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Status": "Created",
            "row_number": "={{ $('Get Notification').item.json.row_number }}"
          },
          "matchingColumns": [
            "row_number"
          ],
          "schema": [
            {
              "id": "Status",
              "displayName": "Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Title",
              "displayName": "Title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Article",
              "displayName": "Article",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        880,
        1240
      ],
      "id": "f333b16f-9c0f-4eb0-9e54-e3c68d44ed3d",
      "name": "Update Status1"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1Wcrfa1kaVzBOGD72clUXYJkclc3GHVjai325n-FVJF4",
          "mode": "list",
          "cachedResultName": "Database for Discord Automations",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Wcrfa1kaVzBOGD72clUXYJkclc3GHVjai325n-FVJF4/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1898924116,
          "mode": "list",
          "cachedResultName": "#3.1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Wcrfa1kaVzBOGD72clUXYJkclc3GHVjai325n-FVJF4/edit#gid=1898924116"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "Status",
              "lookupValue": "To Do"
            }
          ]
        },
        "options": {
          "returnFirstMatch": true
        }
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        340,
        1240
      ],
      "id": "fc6526dc-068d-4b9b-9965-e3d042f48b7b",
      "name": "Get Notification"
    },
    {
      "parameters": {
        "content": "## #3.2 - Join Newsletter",
        "height": 340,
        "width": 760,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        0,
        1480
      ],
      "id": "f16a0b9e-afe4-4aa6-9ab7-3514da6cb1f8",
      "name": "Sticky Note8"
    },
    {
      "parameters": {
        "formTitle": "Join Newsletter",
        "formFields": {
          "values": [
            {
              "fieldLabel": "Email",
              "fieldType": "email",
              "requiredField": true
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.formTrigger",
      "typeVersion": 2.2,
      "position": [
        160,
        1600
      ],
      "id": "6dde83e5-03a9-45b5-b57e-3d1f1a086da9",
      "name": "On form submission1",
      "webhookId": "96aabe4f-8df5-4dff-b55c-a9cc29a9572a"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1Wcrfa1kaVzBOGD72clUXYJkclc3GHVjai325n-FVJF4",
          "mode": "list",
          "cachedResultName": "Database for Discord Automations",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Wcrfa1kaVzBOGD72clUXYJkclc3GHVjai325n-FVJF4/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1009846783,
          "mode": "list",
          "cachedResultName": "#3.2",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Wcrfa1kaVzBOGD72clUXYJkclc3GHVjai325n-FVJF4/edit#gid=1009846783"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Created At": "={{ $json.submittedAt }}",
            "Email": "={{ $json.Email }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Email",
              "displayName": "Email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Created At",
              "displayName": "Created At",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        460,
        1600
      ],
      "id": "7092d9bf-9ad1-4b53-8807-2ff57431d322",
      "name": "Add Subscriber"
    },
    {
      "parameters": {
        "content": "## #3.3 - Send Exclusive Limited-time Offers",
        "height": 500,
        "width": 1660,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        0,
        1840
      ],
      "id": "8f4ba28f-dadf-4fdf-8adc-b5b321f0e50c",
      "name": "Sticky Note9"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {}
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        140,
        2020
      ],
      "id": "f9b5be21-673a-4e8a-8250-f6848ff90762",
      "name": "Daily Schedule2"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1Wcrfa1kaVzBOGD72clUXYJkclc3GHVjai325n-FVJF4",
          "mode": "list",
          "cachedResultName": "Database for Discord Automations",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Wcrfa1kaVzBOGD72clUXYJkclc3GHVjai325n-FVJF4/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1545634593,
          "mode": "list",
          "cachedResultName": "#3.3",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Wcrfa1kaVzBOGD72clUXYJkclc3GHVjai325n-FVJF4/edit#gid=1545634593"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Status": "Created",
            "row_number": "={{ $('Get Offer').item.json.row_number }}"
          },
          "matchingColumns": [
            "row_number"
          ],
          "schema": [
            {
              "id": "Status",
              "displayName": "Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Subject",
              "displayName": "Subject",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Message",
              "displayName": "Message",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        1340,
        2040
      ],
      "id": "89f115a5-c18a-4f31-93e0-8757c93d6745",
      "name": "Update Status2"
    },
    {
      "parameters": {
        "jsCode": "const data = $('Get Subscriber').all();\nreturn { 'bcc' : data.map(item => item.json.Email).join(', ') }"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        560,
        1940
      ],
      "id": "8569bb07-0b66-4491-96ff-33016f6f41e6",
      "name": "Set to BCC"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1Wcrfa1kaVzBOGD72clUXYJkclc3GHVjai325n-FVJF4",
          "mode": "list",
          "cachedResultName": "Database for Discord Automations",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Wcrfa1kaVzBOGD72clUXYJkclc3GHVjai325n-FVJF4/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1545634593,
          "mode": "list",
          "cachedResultName": "#3.3",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Wcrfa1kaVzBOGD72clUXYJkclc3GHVjai325n-FVJF4/edit#gid=1545634593"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "Status",
              "lookupValue": "To Do"
            }
          ]
        },
        "options": {
          "returnFirstMatch": true
        }
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        380,
        2140
      ],
      "id": "8183b6d8-8af6-402f-9e58-4bba23822baa",
      "name": "Get Offer"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        820,
        2040
      ],
      "id": "bbb1d4bd-6c88-4f48-918a-ca63a3375ea1",
      "name": "Merge1"
    },
    {
      "parameters": {
        "sendTo": "tevi.bayu@gmail.com",
        "subject": "={{ $json.Subject }}",
        "message": "={{ $json.Message }}",
        "options": {
          "appendAttribution": false,
          "bccList": "={{ $json.bcc }}"
        }
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1080,
        2040
      ],
      "id": "eda85a5e-7a6f-4cb0-b4e3-45ef2883906f",
      "name": "Send Bulk Email",
      "webhookId": "4054cd09-80d3-41f9-b1af-c72a6066abe0"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1Wcrfa1kaVzBOGD72clUXYJkclc3GHVjai325n-FVJF4",
          "mode": "list",
          "cachedResultName": "Database for Discord Automations",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Wcrfa1kaVzBOGD72clUXYJkclc3GHVjai325n-FVJF4/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 558497476,
          "mode": "list",
          "cachedResultName": "#4",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Wcrfa1kaVzBOGD72clUXYJkclc3GHVjai325n-FVJF4/edit#gid=558497476"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.5,
      "position": [
        420,
        2860
      ],
      "id": "9dcd1556-9f61-4c26-b6b4-51b5151bfbe4",
      "name": "FAQ Database"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1Wcrfa1kaVzBOGD72clUXYJkclc3GHVjai325n-FVJF4",
          "mode": "list",
          "cachedResultName": "Database for Discord Automations",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Wcrfa1kaVzBOGD72clUXYJkclc3GHVjai325n-FVJF4/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1009846783,
          "mode": "list",
          "cachedResultName": "#3.2",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Wcrfa1kaVzBOGD72clUXYJkclc3GHVjai325n-FVJF4/edit#gid=1009846783"
        },
        "options": {
          "returnFirstMatch": false
        }
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        380,
        1940
      ],
      "id": "4026bebc-f671-4fa7-8955-7609743a0814",
      "name": "Get Subscriber"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-discord-trigger.discordInteraction",
      "typeVersion": 1,
      "position": [
        480,
        120
      ],
      "id": "755ecaf8-43b6-402f-bc27-b154ce9bfaef",
      "name": "Discord Interaction"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-discord-trigger.discordInteraction",
      "typeVersion": 1,
      "position": [
        580,
        680
      ],
      "id": "10ab9b43-486f-4a0a-b7e4-b0aff07e29d8",
      "name": "Discord Interaction2"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-discord-trigger.discordInteraction",
      "typeVersion": 1,
      "position": [
        600,
        1240
      ],
      "id": "07b00691-a8b6-49f0-86a0-479dfa132bb5",
      "name": "Discord Interaction3"
    },
    {
      "parameters": {
        "inputSource": "passthrough"
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        1680,
        4820
      ],
      "id": "1323d2a8-8473-4eea-9699-d15080f785e9",
      "name": "Workflow Input Trigger"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.tavily.com/search",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"api_key\": \"GANTI-API-KEY-PUNYAMU\",\n    \"query\": \"{{ $json.query.replace(/\"/g, '\\\\\"') }}\",\n    \"search_depth\": \"basic\",\n    \"include_answer\": true,\n    \"topic\": \"news\",\n    \"include_raw_content\": true,\n    \"max_results\": 3\n} ",
        "options": {}
      },
      "id": "d89c9c52-5e5d-4177-9791-b3a8fb41f5f5",
      "name": "Tavily",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1900,
        4820
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "1ae0dd90-d1d0-494b-bd8b-1ef335f0bd8f",
              "name": "response",
              "value": "=[Source 1]\nURL: {{ $json.results[0].url }}\nContent: {{ $json.results[0].content }}\n\n[Source 2]\nURL: {{ $json.results[1].url }}\nContent: {{ $json.results[1].content }}\n\n[Source 2]\nURL: {{ $json.results[2].url }}\nContent: {{ $json.results[2].content }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2140,
        4820
      ],
      "id": "d86305c8-6f77-4992-82b9-d71a80128289",
      "name": "response"
    },
    {
      "parameters": {
        "content": "# Tavily Tool\n**Pindahkan ini ke workflow baru**",
        "height": 360,
        "width": 700,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1620,
        4660
      ],
      "typeVersion": 1,
      "id": "7e60ada0-1195-45be-9724-43bdc07a6fe9",
      "name": "Sticky Note10"
    },
    {
      "parameters": {
        "content": "## Cara Setting Discord Credential\n\n## 1. Buat Aplikasi dan Bot di Discord\n\n1. Buka [Discord Developer Portal](https://discord.com/developers/applications)\n2. Klik **\"New Application\"** → beri nama → klik **\"Create\"**\n3. Di sidebar, klik **\"Bot\"** → **Add Bot** → **Yes, do it!**\n4. Aktifkan opsi berikut:\n   - ✅ Message Content Intent\n   - ✅ Server Members Intent (jika perlu)\n5. Salin data berikut:\n   - **Bot Token**\n   - **Client ID**\n   - **Client Secret**\n   - **Public Key**\n   - **Application ID** (sama dengan Client ID)\n\n---\n\n## 2. Invite Bot ke Server Discord\n\n1. Masuk ke menu **OAuth2 > URL Generator**\n2. Pilih:\n   - **Scopes**: `bot`, `applications.commands`\n   - **Bot Permissions**: Sesuaikan, minimal:\n     - `Send Messages`\n     - `Read Message History`\n     - `View Channels`\n3. Copy URL → buka di browser → pilih server → klik **Authorize**\n\n---\n\n## 3. Tambahkan Credential di n8n\n\n1. Buka `http://localhost:5678` (atau URL n8n kamu)\n2. Masuk ke tab **Credentials**\n3. Klik **\"New Credential\"** → cari dan pilih **Discord Trigger API**\n4. Masukkan informasi berikut:\n   - **Bot Token**: (dari Discord)\n   - **Client ID**\n   - **Client Secret**\n   - **Public Key**\n   - **Application ID**\n5. Klik **Save**\n\n---\n\n## 4. Buat Workflow di n8n\n\n1. Tambahkan node `Discord Trigger`\n2. Pilih credential yang sudah kamu buat\n3. Pilih event yang ingin di-handle, misalnya:\n   - `MESSAGE_CREATE`\n   - `MESSAGE_REACTION_ADD`\n4. Aktifkan workflow\n5. Tes dengan mengirim pesan di Discord\n\n---\n\n## ⚠️ Catatan Penting\n\n- n8n harus **bisa diakses secara publik** (gunakan [ngrok](https://ngrok.com) jika masih localhost).\n- Bot harus **sudah join ke server Discord kamu**.\n- Pastikan izin bot sesuai dengan event yang ingin ditrigger.\n\n---\n\n## 📚 Referensi\n\n- [n8n-nodes-discord-trigger (npm)](https://www.npmjs.com/package/n8n-nodes-discord-trigger)\n- [Discord Developer Portal](https://discord.com/developers/applications)",
        "height": 1060,
        "width": 1060,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1400,
        1900
      ],
      "id": "71192c12-eafe-4577-8e1f-aee98e342906",
      "name": "Sticky Note11"
    },
    {
      "parameters": {
        "content": "# ☁️ Cara Setting Gmail & Google Sheets Credential di n8n (OAuth2)\n\nPanduan ini akan membantumu mengatur **Gmail** dan **Google Sheets** di n8n menggunakan **OAuth2** dengan **Client ID & Client Secret yang sama**, dari satu project Google Cloud.\n\n---\n\n## ✅ 1. Buat Project di Google Cloud Console\n\n1. Buka [Google Cloud Console](https://console.cloud.google.com/)\n2. Klik **\"New Project\"**, beri nama bebas (misal: `n8n-integrasi`)\n3. Setelah project dibuat, klik \"Select Project\"\n\n---\n\n## 🔧 2. Aktifkan API yang Dibutuhkan\n\n1. Masuk menu **APIs & Services > Library**\n2. Aktifkan semua ini:\n   - 🔹 Gmail API\n   - 🔹 Google Sheets API\n   - 🔹 Google Drive API\n\n---\n\n## 🔐 3. Buat OAuth2 Client ID\n\n1. Masuk ke menu **APIs & Services > Credentials**\n2. Klik **Create Credentials > OAuth client ID**\n3. Pilih **Web Application**\n4. Isi:\n   - **Name**: `n8n OAuth`\n   - **Authorized redirect URIs**:\n     ```\n     https://api.appjuara.com/rest/oauth2-credential/callback\n     ```\n5. Klik **Create**\n6. Simpan:\n   - ✅ Client ID\n   - ✅ Client Secret\n\n---\n\n## ⚙️ 4. Setting Credential Gmail di n8n\n\n1. Buka dashboard n8n\n2. Masuk ke tab **Credentials > New Credential**\n3. Pilih: **Gmail OAuth2 API**\n4. Isi form seperti berikut:\n\n| Field | Value |\n|-------|-------|\n| **OAuth Redirect URL** | `https://api.appjuara.com/rest/oauth2-credential/callback` |\n| **Grant Type** | Authorization Code |\n| **Authorization URL** | `https://accounts.google.com/o/oauth2/v2/auth` |\n| **Access Token URL** | `https://oauth2.googleapis.com/token` |\n| **Client ID** | *(Dari Google Cloud)* |\n| **Client Secret** | *(Dari Google Cloud)* |\n| **Auth URI Query Parameters** | `access_type=offline&prompt=consent` |\n\n5. Klik **Connect OAuth2 Account**\n6. Login dan izinkan akses\n\n---\n\n## 📄 5. Setting Credential Google Sheets di n8n\n\nKarena sudah pakai OAuth yang sama, kamu tinggal:\n\n1. Masuk ke **Credentials > New Credential**\n2. Pilih: **Google Sheets OAuth2 API**\n3. Isi form seperti ini:\n\n| Field | Value |\n|-------|-------|\n| **OAuth Redirect URL** | `https://api.appjuara.com/rest/oauth2-credential/callback` |\n| **Client ID** | *(Sama seperti Gmail)* |\n| **Client Secret** | *(Sama seperti Gmail)* |",
        "height": 1780,
        "width": 1060
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1400,
        20
      ],
      "id": "3916a2ce-8427-47ad-bdb5-5b19ee133118",
      "name": "Sticky Note12"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        760,
        980
      ],
      "id": "bd80bbe2-258a-4a0f-b8d5-b1b41b9acd87",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        220,
        2640
      ],
      "id": "51e7b8b7-9d15-4198-91a0-b5a4ff196273",
      "name": "AI Agent2"
    }
  ],
  "pinData": {},
  "repo_name": null,
  "repo_owner": null,
  "repo_path": null,
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-06-03T16:07:30.000Z",
  "versionId": "460c7f07-413c-484d-9bd3-beb4440a2c10"
}